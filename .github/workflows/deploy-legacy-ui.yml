name: Deploy legacy-ui to Vercel
on:
  push: { branches: [ legacy-ui-build ] }
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '18' }

      - name: Ensure jq
        run: sudo apt-get update -y && sudo apt-get install -y jq

      - name: Show project.json
        run: |
          test -s .vercel/project.json || (echo "No .vercel/project.json"; exit 1)
          cat .vercel/project.json

      - name: Export IDs from project.json
        run: |
          echo "VERCEL_ORG_ID=$(jq -r '.orgId' .vercel/project.json)" >> $GITHUB_ENV
          echo "VERCEL_PROJECT_ID=$(jq -r '.projectId' .vercel/project.json)" >> $GITHUB_ENV

      - name: vercel whoami (debug)
        run: npx -y vercel@latest whoami --token "$VERCEL_TOKEN" || true

      - name: vercel deploy (remote, prod, debug)
        env:
          VERCEL_NON_INTERACTIVE: "1"
          VERCEL_ORG_ID: ${{ env.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ env.VERCEL_PROJECT_ID }}
        run: |
          set -x
          npx -y vercel@latest deploy --prod --yes \
            --scope adsrays \
            --token "$VERCEL_TOKEN" \
            --debug \
          2>&1 | tee deploy.log

      - name: Dump deploy error tail (if failed)
        if: failure()
        run: |
          echo "::group::deploy.log (tail)"
          tail -n 200 deploy.log || true
          echo "::endgroup::"

      - name: Publish Production URL (always)
        if: always()
        run: |
          DEPLOY=$(curl -fsS -H "Authorization: Bearer $VERCEL_TOKEN" \
            --get 'https://api.vercel.com/v6/deployments' \
            --data-urlencode "projectId=$VERCEL_PROJECT_ID" \
            --data-urlencode "teamId=$VERCEL_ORG_ID" \
            --data-urlencode "target=production" \
            --data-urlencode "state=READY" \
            --data-urlencode "limit=1")
          DID=$(jq -r '.deployments[0].uid // empty' <<<"$DEPLOY")
          URL=$(jq -r  '.deployments[0].url // empty' <<<"$DEPLOY")
          ALIAS=$(curl -fsS -H "Authorization: Bearer $VERCEL_TOKEN" \
            --get 'https://api.vercel.com/v2/aliases' \
            --data-urlencode "deploymentId=$DID" \
            --data-urlencode "teamId=$VERCEL_ORG_ID" \
            | jq -r '[.aliases[].alias] | map(select(test("-git-")|not)) | .[0] // empty' || true)
          if [ -n "$ALIAS" ]; then
            echo "Production: https://$ALIAS"
          elif [ -n "$URL" ]; then
            echo "Production: https://$URL"
          else
            echo "Production: not-found"
          fi
