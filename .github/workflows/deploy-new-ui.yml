name: Deploy new-ui to Vercel
on:
  push: { branches: [ new-ui ] }
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20' }

      # показать, что project.json приехал в CI
      - name: Show project.json
        run: |
          test -s .vercel/project.json || (echo "No .vercel/project.json" && exit 1)
          cat .vercel/project.json

      # вытащить orgId / projectId из project.json в ENV раннера
      - name: Export IDs from project.json
        run: |
          echo "VERCEL_ORG_ID=$(jq -r '.orgId' .vercel/project.json)" >> $GITHUB_ENV
          echo "VERCEL_PROJECT_ID=$(jq -r '.projectId' .vercel/project.json)" >> $GITHUB_ENV

      - name: Install deps
        run: npm ci || npm i --legacy-peer-deps --no-audit --no-fund

      # если vercel pull капризничал, даём максимум контекста
      - name: vercel pull (prod)
        run: |
          npx -y vercel@latest --version
          npx -y vercel@latest whoami --token "$VERCEL_TOKEN" || true
          npx -y vercel@latest pull --yes --environment=production --debug --token "$VERCEL_TOKEN"

      - name: vercel build
        run: npx -y vercel@latest build --token "$VERCEL_TOKEN"

      - name: vercel deploy (prebuilt, prod)
        run: npx -y vercel@latest deploy --prebuilt --prod --token "$VERCEL_TOKEN"
